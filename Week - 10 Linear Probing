#include <stdio.h>
#include <string.h> 
#define MAX 100

struct Employee {
    int k;
    char n[50];
};

struct Employee ht[MAX];
int ts;

void init() {
    for (int i = 0; i < MAX; i++) ht[i].k = -1;
}

int hash(int k) {
    return k % ts;
}

void insert(int k, char n[]) {
    int idx = hash(k);
    int startIdx = idx;  
    while (ht[idx].k != -1) {
        idx = (idx + 1) % ts;
        if (idx == startIdx) {
            printf("Hash table is full!\n");
            return;  
        }
    }
    ht[idx].k = k;
    strncpy(ht[idx].n, n, 49);  
    ht[idx].n[49] = '\0';  
}

void display() {
    for (int i = 0; i < ts; i++) {
        if (ht[i].k != -1)
            printf("Idx %d: Key = %d, Name = %s\n", i, ht[i].k, ht[i].n);
        else
            printf("Idx %d: Empty\n", i);
    }
}

int main() {
    int n;
    printf("Enter table size (max size %d): ", MAX);
    scanf("%d", &ts);

    if (ts <= 0 || ts > MAX) ts = MAX;  

    init();

    printf("Enter number of employees: ");
    scanf("%d", &n);
    getchar();  

    for (int i = 0; i < n; i++) {
        int k;
        char name[50];
        printf("Enter key and name for employee %d: ", i + 1);
        scanf("%d", &k);
        getchar();  
        fgets(name, 50, stdin); 
        name[strcspn(name, "\n")] = '\0'; 
        insert(k, name);
    }

    display();

    return 0;
}



Output - 

Enter table size (max size 100): 7
Enter number of employees: 5
Enter key and name for employee 1: 1234 Rohith
Enter key and name for employee 2: 1548 Rahul
Enter key and name for employee 3: 1647 Ramesh 
Enter key and name for employee 4: 2547 Mohith
Enter key and name for employee 5: 4758 Arun
Idx 0: Empty
Idx 1: Key = 1548, Name = Rahul
Idx 2: Key = 1234, Name = Rohith
Idx 3: Key = 1647, Name = Ramesh
Idx 4: Empty
Idx 5: Key = 4758, Name = Arun
Idx 6: Key = 2547, Name = Mohith
